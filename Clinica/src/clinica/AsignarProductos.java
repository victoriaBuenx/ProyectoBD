/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinica;

import com.formdev.flatlaf.IntelliJTheme;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import java.sql.*;


/**
 *
 * @author victo
 */
public class AsignarProductos extends javax.swing.JFrame {
    /**
     * Creates new form AsigarProductos
     */
    DiseñoTablas tablas = new DiseñoTablas();
    
    public AsignarProductos() {
        IntelliJTheme.setup(getClass().getResourceAsStream("/componentes/LightFlatTheme.theme.json"));
        UIManager.put( "Button.arc", 15);
        UIManager.put("Button.background", Color.WHITE);
        
        initComponents();
        
        tablas.personalizarTabla(jTable1);
        tablas.personalizarRenderizado(jTable1);
        
        DefaultTableModel modelo = new DefaultTableModel(
            new Object[]{"ID Producto", "Nombre", "Cantidad"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2;
            }
        };
        jTable1.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Poppins SemiBold", 0, 24)); // NOI18N
        jLabel1.setText("Productos");

        jTable1.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id", "Producto", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int fila = jTable1.rowAtPoint(evt.getPoint());
            if (fila >= 0) {
                int confirmacion = JOptionPane.showConfirmDialog(null,
                        "¿Deseas eliminar este producto de la lista?", "Confirmar eliminación",
                        JOptionPane.YES_NO_OPTION);

                if (confirmacion == JOptionPane.YES_OPTION) {
                    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                    modelo.removeRow(fila);
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**s
     * @param idProducto
     * @param nombreProducto
     */
    
    public void abrirVentanaProducto(int idProducto, String nombreProducto) {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        boolean yaExiste = false;

        for (int i = 0; i < modelo.getRowCount(); i++) {
            Object valor = modelo.getValueAt(i, 0);
            if (valor != null) {
                try {
                    int idExistente = Integer.parseInt(valor.toString());
                    if (idExistente == idProducto) {
                        yaExiste = true;
                        break;
                    }
                } catch (NumberFormatException e) {
                    System.err.println("Error al convertir ID del producto en la fila " + i);
                }
            }
        }

        if (!yaExiste) {
            modelo.addRow(new Object[]{idProducto, nombreProducto, ""});
        }
        
        JOptionPane.showMessageDialog(null,"Producto agregado correctamente", "Confirmar producto",JOptionPane.INFORMATION_MESSAGE);

    }

    public void insertarProductosAsignados(int idTratamiento) {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        System.out.println("Filas en la tabla: " + modelo.getRowCount());


        for (int i = 0; i < modelo.getRowCount(); i++) {
            System.out.println("Fila " + i + ": ID Producto = " + modelo.getValueAt(i, 0) + ", Cantidad = " + modelo.getValueAt(i, 2));
            int idProducto = (int) modelo.getValueAt(i, 0);
            String cantidadStr = modelo.getValueAt(i, 2).toString().trim();
            
            if (cantidadStr.isEmpty()) {
                JOptionPane.showMessageDialog(null, "La cantidad no puede estar vacía para el producto en la fila " + (i + 1));
                continue;
            }

            int cantidad = Integer.parseInt(cantidadStr);

            String sql = "INSERT INTO productostratamiento ( idProducto, idTratamiento, Cantidad) VALUES (?, ?, ?)";

            try (Connection con = new Conexion().conexion();
                PreparedStatement ps = con.prepareStatement(sql)) {

                ps.setInt(1, idProducto);
                ps.setInt(2, idTratamiento);
                ps.setInt(3, cantidad);
                ps.executeUpdate();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al asignar producto al tratamiento.");
            }
        }

        JOptionPane.showMessageDialog(null, "Productos asignados correctamente.");
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
